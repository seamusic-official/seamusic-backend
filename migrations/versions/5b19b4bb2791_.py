"""empty message

Revision ID: 5b19b4bb2791
Revises: 73c5b2e60fd9
Create Date: 2024-10-25 11:53:03.463920

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5b19b4bb2791"
down_revision: Union[str, None] = "73c5b2e60fd9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "follower_to_squads_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("squad_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "squad_id"),
    )
    op.create_table(
        "artist_to_squad_association",
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.Column("squad_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
        ),
        sa.PrimaryKeyConstraint("artist_id", "squad_id"),
    )
    op.create_table(
        "message_to_chat_association",
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("chat_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chat.id"],
        ),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["messages.id"],
        ),
        sa.PrimaryKeyConstraint("message_id", "chat_id"),
    )
    op.drop_table("artist_to_squad_subs")
    op.drop_table("admin_producer_to_squad")
    op.drop_table("producer_to_squad_subs")
    op.add_column(
        "album_to_tag_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "album_to_tag_association_tag_id_fkey",
        "album_to_tag_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "album_to_tag_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("album_to_tag_association", "tag_id")
    op.add_column(
        "artist_profiles", sa.Column("username", sa.String(), nullable=False)
    )
    op.add_column(
        "artist_to_tags_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "artist_to_tags_association_tag_id_fkey",
        "artist_to_tags_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "artist_to_tags_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("artist_to_tags_association", "tag_id")
    op.add_column(
        "beatpack_to_tag_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "beatpack_to_tag_association_tag_id_fkey",
        "beatpack_to_tag_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "beatpack_to_tag_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("beatpack_to_tag_association", "tag_id")
    op.drop_column("chat", "text")
    op.add_column(
        "comments", sa.Column("created_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "comments", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "licenses", sa.Column("created_at", sa.Date(), nullable=False)
    )
    op.add_column(
        "licenses", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "messages", sa.Column("created_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "messages", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "notifications", sa.Column("created_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "playlists_to_tag_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "playlists_to_tag_association_tag_id_fkey",
        "playlists_to_tag_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "playlists_to_tag_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("playlists_to_tag_association", "tag_id")
    op.add_column(
        "producer_to_squad_association",
        sa.Column("producer_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "producer_to_squad_association_producer_profile_id_fkey",
        "producer_to_squad_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "producer_to_squad_association",
        "producer_profiles",
        ["producer_id"],
        ["id"],
    )
    op.drop_column("producer_to_squad_association", "producer_profile_id")
    op.add_column(
        "producer_to_tags_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "producer_to_tags_association_tag.id_fkey",
        "producer_to_tags_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "producer_to_tags_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("producer_to_tags_association", "tag.id")
    op.add_column("squads", sa.Column("created_at", sa.Date(), nullable=False))
    op.add_column(
        "squads", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "tag_to_beat_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "tag_to_beat_association_tag_id_fkey",
        "tag_to_beat_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "tag_to_beat_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("tag_to_beat_association", "tag_id")
    op.add_column(
        "tag_to_soundkits_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "tag_to_soundkits_association_tag_id_fkey",
        "tag_to_soundkits_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "tag_to_soundkits_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("tag_to_soundkits_association", "tag_id")
    op.add_column(
        "track_to_tag_association",
        sa.Column("tag_name", sa.String(), nullable=False),
    )
    op.drop_constraint(
        "track_to_tag_association_tag_id_fkey",
        "track_to_tag_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "track_to_tag_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("track_to_tag_association", "tag_id")
    op.add_column("tracks", sa.Column("created_at", sa.Date(), nullable=False))
    op.add_column(
        "tracks", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "user_to_tags_association",
        sa.Column("tag_name", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "user_to_tags_association_tag_id_fkey",
        "user_to_tags_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "user_to_tags_association", "tags", ["tag_name"], ["name"]
    )
    op.drop_column("user_to_tags_association", "tag_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user_to_tags_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "user_to_tags_association", type_="foreignkey")
    op.create_foreign_key(
        "user_to_tags_association_tag_id_fkey",
        "user_to_tags_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("user_to_tags_association", "tag_name")
    op.drop_column("tracks", "updated_at")
    op.drop_column("tracks", "created_at")
    op.add_column(
        "track_to_tag_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "track_to_tag_association", type_="foreignkey")
    op.create_foreign_key(
        "track_to_tag_association_tag_id_fkey",
        "track_to_tag_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("track_to_tag_association", "tag_name")
    op.add_column(
        "tag_to_soundkits_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        None, "tag_to_soundkits_association", type_="foreignkey"
    )
    op.create_foreign_key(
        "tag_to_soundkits_association_tag_id_fkey",
        "tag_to_soundkits_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("tag_to_soundkits_association", "tag_name")
    op.add_column(
        "tag_to_beat_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "tag_to_beat_association", type_="foreignkey")
    op.create_foreign_key(
        "tag_to_beat_association_tag_id_fkey",
        "tag_to_beat_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("tag_to_beat_association", "tag_name")
    op.drop_column("squads", "updated_at")
    op.drop_column("squads", "created_at")
    op.add_column(
        "producer_to_tags_association",
        sa.Column("tag.id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        None, "producer_to_tags_association", type_="foreignkey"
    )
    op.create_foreign_key(
        "producer_to_tags_association_tag.id_fkey",
        "producer_to_tags_association",
        "tags",
        ["tag.id"],
        ["id"],
    )
    op.drop_column("producer_to_tags_association", "tag_name")
    op.add_column(
        "producer_to_squad_association",
        sa.Column(
            "producer_profile_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(
        None, "producer_to_squad_association", type_="foreignkey"
    )
    op.create_foreign_key(
        "producer_to_squad_association_producer_profile_id_fkey",
        "producer_to_squad_association",
        "producer_profiles",
        ["producer_profile_id"],
        ["id"],
    )
    op.drop_column("producer_to_squad_association", "producer_id")
    op.add_column(
        "playlists_to_tag_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        None, "playlists_to_tag_association", type_="foreignkey"
    )
    op.create_foreign_key(
        "playlists_to_tag_association_tag_id_fkey",
        "playlists_to_tag_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("playlists_to_tag_association", "tag_name")
    op.drop_column("notifications", "created_at")
    op.drop_column("messages", "updated_at")
    op.drop_column("messages", "created_at")
    op.drop_column("licenses", "updated_at")
    op.drop_column("licenses", "created_at")
    op.drop_column("comments", "updated_at")
    op.drop_column("comments", "created_at")
    op.add_column(
        "chat",
        sa.Column("text", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "beatpack_to_tag_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "beatpack_to_tag_association", type_="foreignkey")
    op.create_foreign_key(
        "beatpack_to_tag_association_tag_id_fkey",
        "beatpack_to_tag_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("beatpack_to_tag_association", "tag_name")
    op.add_column(
        "artist_to_tags_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "artist_to_tags_association", type_="foreignkey")
    op.create_foreign_key(
        "artist_to_tags_association_tag_id_fkey",
        "artist_to_tags_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("artist_to_tags_association", "tag_name")
    op.drop_column("artist_profiles", "username")
    op.add_column(
        "album_to_tag_association",
        sa.Column("tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "album_to_tag_association", type_="foreignkey")
    op.create_foreign_key(
        "album_to_tag_association_tag_id_fkey",
        "album_to_tag_association",
        "tags",
        ["tag_id"],
        ["id"],
    )
    op.drop_column("album_to_tag_association", "tag_name")
    op.create_table(
        "producer_to_squad_subs",
        sa.Column(
            "producer_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "squad_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
            name="producer_to_squad_subs_producer_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
            name="producer_to_squad_subs_squad_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "producer_id", "squad_id", name="producer_to_squad_subs_pkey"
        ),
    )
    op.create_table(
        "admin_producer_to_squad",
        sa.Column(
            "squad_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "producer_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
            name="admin_producer_to_squad_producer_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
            name="admin_producer_to_squad_squad_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "squad_id", "producer_id", name="admin_producer_to_squad_pkey"
        ),
    )
    op.create_table(
        "artist_to_squad_subs",
        sa.Column(
            "artist_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "squad_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
            name="artist_to_squad_subs_artist_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
            name="artist_to_squad_subs_squad_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "artist_id", "squad_id", name="artist_to_squad_subs_pkey"
        ),
    )
    op.drop_table("message_to_chat_association")
    op.drop_table("artist_to_squad_association")
    op.drop_table("follower_to_squads_association")
    # ### end Alembic commands ###
