"""fixed moddels

Revision ID: 73c5b2e60fd9
Revises: ddeb0ed1ec48
Create Date: 2024-10-20 15:32:31.151727

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "73c5b2e60fd9"
down_revision: Union[str, None] = "ddeb0ed1ec48"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_to_albums_likes",
        sa.Column("album_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("album_id", "user_id"),
    )
    op.create_table(
        "user_to_beatpacks_likes",
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("beatpacks_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["beatpacks_id"],
            ["beatpacks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("beat_id", "user_id", "beatpacks_id"),
    )
    op.create_table(
        "user_to_playlists_likes",
        sa.Column("playlist_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["playlist_id"],
            ["playlists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("playlist_id", "user_id"),
    )
    op.create_table(
        "user_to_soundkits_likes",
        sa.Column("soundkit_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["soundkit_id"],
            ["soundkits.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("soundkit_id", "user_id"),
    )
    op.create_table(
        "user_to_tracks_likes",
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("track_id", "user_id"),
    )
    op.create_table(
        "artist_to_squad_subs",
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.Column("squad_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
        ),
        sa.PrimaryKeyConstraint("artist_id", "squad_id"),
    )
    op.create_table(
        "producer_to_squad_subs",
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.Column("squad_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
        ),
        sa.PrimaryKeyConstraint("producer_id", "squad_id"),
    )
    op.add_column("albums", sa.Column("views", sa.Integer(), nullable=False))
    op.add_column(
        "beatpacks", sa.Column("views", sa.Integer(), nullable=False)
    )
    op.add_column("beats", sa.Column("views", sa.Integer(), nullable=False))
    op.add_column(
        "playlists", sa.Column("views", sa.Integer(), nullable=False)
    )
    op.add_column(
        "soundkits", sa.Column("views", sa.Integer(), nullable=False)
    )
    op.add_column("squads", sa.Column("views", sa.Integer(), nullable=False))
    op.add_column("tracks", sa.Column("views", sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tracks", "views")
    op.drop_column("squads", "views")
    op.drop_column("soundkits", "views")
    op.drop_column("playlists", "views")
    op.drop_column("beats", "views")
    op.drop_column("beatpacks", "views")
    op.drop_column("albums", "views")
    op.drop_table("producer_to_squad_subs")
    op.drop_table("artist_to_squad_subs")
    op.drop_table("user_to_tracks_likes")
    op.drop_table("user_to_soundkits_likes")
    op.drop_table("user_to_playlists_likes")
    op.drop_table("user_to_beatpacks_likes")
    op.drop_table("user_to_albums_likes")
    # ### end Alembic commands ###
