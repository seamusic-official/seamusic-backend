"""empty message

Revision ID: ddeb0ed1ec48
Revises: d5eca00f6b86
Create Date: 2024-10-19 13:38:01.737860

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ddeb0ed1ec48"
down_revision: Union[str, None] = "d5eca00f6b86"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chat",
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notifications",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "album_to_tag_association",
        sa.Column("album_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("album_id", "tag_id"),
    )
    op.create_table(
        "album_to_track_association",
        sa.Column("album_id", sa.Integer(), nullable=False),
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.PrimaryKeyConstraint("album_id", "track_id"),
    )
    op.create_table(
        "beat_to_soundkits_association",
        sa.Column("soundkit_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["soundkit_id"],
            ["soundkits.id"],
        ),
        sa.PrimaryKeyConstraint("soundkit_id", "beat_id"),
    )
    op.create_table(
        "beatpack_to_beat_association_table",
        sa.Column("beat_id", sa.Integer(), nullable=True),
        sa.Column("beatpack_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["beatpack_id"],
            ["beatpacks.id"],
        ),
    )
    op.create_table(
        "beatpack_to_tag_association",
        sa.Column("beatpack_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beatpack_id"],
            ["beatpacks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("beatpack_id", "tag_id"),
    )
    op.create_table(
        "messages",
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_available", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "playlists_to_beat_association",
        sa.Column("playlists_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["playlists_id"],
            ["playlists.id"],
        ),
        sa.PrimaryKeyConstraint("playlists_id", "beat_id"),
    )
    op.create_table(
        "playlists_to_tag_association",
        sa.Column("playlists_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["playlists_id"],
            ["playlists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("playlists_id", "tag_id"),
    )
    op.create_table(
        "playlists_to_track_association",
        sa.Column("playlists_id", sa.Integer(), nullable=False),
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["playlists_id"],
            ["playlists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.PrimaryKeyConstraint("playlists_id", "track_id"),
    )
    op.create_table(
        "tag_to_beat_association",
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("tag_id", "beat_id"),
    )
    op.create_table(
        "tag_to_soundkits_association",
        sa.Column("soundkit_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["soundkit_id"],
            ["soundkits.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("soundkit_id", "tag_id"),
    )
    op.create_table(
        "track_to_tag_association",
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.PrimaryKeyConstraint("track_id", "tag_id"),
    )
    op.create_table(
        "user_to_albums_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("album_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "album_id"),
    )
    op.create_table(
        "user_to_chat_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("chat_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chat.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "chat_id"),
    )
    op.create_table(
        "user_to_tags_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "tag_id"),
    )
    op.create_table(
        "admin_producer_to_squad",
        sa.Column("squad_id", sa.Integer(), nullable=False),
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
        ),
        sa.PrimaryKeyConstraint("squad_id", "producer_id"),
    )
    op.create_table(
        "album_to_artist_association",
        sa.Column("album_id", sa.Integer(), nullable=False),
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
        ),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
        ),
        sa.PrimaryKeyConstraint("album_id", "artist_id"),
    )
    op.create_table(
        "artist_to_tags_association",
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("artist_id", "tag_id"),
    )
    op.create_table(
        "artist_to_track_association",
        sa.Column("artist_profile_id", sa.Integer(), nullable=False),
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["artist_profile_id"],
            ["artist_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.PrimaryKeyConstraint("artist_profile_id", "track_id"),
    )
    op.create_table(
        "producer_to_beat_association",
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.PrimaryKeyConstraint("producer_id", "beat_id"),
    )
    op.create_table(
        "producer_to_beatpacks_association",
        sa.Column("producer_profile_id", sa.Integer(), nullable=True),
        sa.Column("beatpack_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["beatpack_id"],
            ["beatpacks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["producer_profile_id"],
            ["producer_profiles.id"],
        ),
    )
    op.create_table(
        "producer_to_soundkits_association",
        sa.Column("soundkit_id", sa.Integer(), nullable=False),
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["soundkit_id"],
            ["soundkits.id"],
        ),
        sa.PrimaryKeyConstraint("soundkit_id", "producer_id"),
    )
    op.create_table(
        "producer_to_squad_association",
        sa.Column("squad_id", sa.Integer(), nullable=False),
        sa.Column("producer_profile_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_profile_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
        ),
        sa.PrimaryKeyConstraint("squad_id", "producer_profile_id"),
    )
    op.create_table(
        "producer_to_tags_association",
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.Column("tag.id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag.id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("producer_id", "tag.id"),
    )
    op.create_table(
        "track_to_producer_association",
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.Column("track_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
        ),
        sa.PrimaryKeyConstraint("producer_id", "track_id"),
    )
    op.create_table(
        "user_to_artist_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "artist_id"),
    )
    op.create_table(
        "user_to_comments_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("comment_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "comment_id"),
    )
    op.create_table(
        "user_to_message_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["messages.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "message_id"),
    )
    op.create_table(
        "user_to_producer_association",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("producer_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "producer_id"),
    )
    op.drop_table("user_to_beatpacks_association_table")
    op.drop_table("artist_profile_track_association")
    op.drop_table("squad_producer_profile_association")
    op.drop_table("producer_profile_tags_association")
    op.drop_table("only_telegram_subscribe_month")
    op.drop_table("only_telegram_subscribe_year")
    op.drop_table("telegram_accounts")
    op.drop_table("artist_profile_tags_association")
    op.drop_table("album_track_association")
    op.drop_table("artist_profile_album_association")
    op.drop_table("squad_artist_profile_association")
    op.drop_table("user_comments_association")
    op.drop_table("user_to_soundkits_association_table")
    op.drop_table("beats_to_beatpacks_association_table")
    op.add_column(
        "albums", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.alter_column(
        "albums",
        "updated_at",
        existing_type=sa.DATE(),
        type_=sa.DateTime(),
        existing_nullable=False,
    )
    op.add_column(
        "artist_profiles",
        sa.Column("is_available", sa.Boolean(), nullable=False),
    )
    op.alter_column(
        "artist_profiles",
        "description",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "artist_profiles",
        "picture_url",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.add_column(
        "beatpacks", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.drop_column("beatpacks", "created_at")
    op.add_column(
        "beats", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.drop_column("beats", "created_at")
    op.add_column(
        "comments", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.add_column("licenses", sa.Column("title", sa.String(), nullable=False))
    op.add_column(
        "licenses", sa.Column("description", sa.String(), nullable=False)
    )
    op.add_column(
        "licenses", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.drop_constraint(
        "licenses_author_id_fkey", "licenses", type_="foreignkey"
    )
    op.drop_column("licenses", "author_id")
    op.add_column(
        "playlists", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.drop_column("playlists", "updated_at")
    op.drop_column("playlists", "created_at")
    op.add_column(
        "producer_profiles",
        sa.Column("is_available", sa.Boolean(), nullable=False),
    )
    op.add_column(
        "soundkits", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "soundkits", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.add_column("squads", sa.Column("title", sa.String(), nullable=False))
    op.add_column(
        "squads", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.drop_column("squads", "name")
    op.drop_column("squads", "file_url")
    op.drop_column("squads", "created_at")
    op.add_column(
        "tags", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.add_column("tracks", sa.Column("title", sa.String(), nullable=False))
    op.add_column(
        "tracks", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    op.drop_column("tracks", "name")
    op.add_column(
        "users", sa.Column("telegram_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "users", sa.Column("premium_level", sa.String(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("is_verified", sa.Boolean(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("is_available", sa.Boolean(), nullable=False)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "is_available")
    op.drop_column("users", "updated_at")
    op.drop_column("users", "is_verified")
    op.drop_column("users", "premium_level")
    op.drop_column("users", "telegram_id")
    op.add_column(
        "tracks",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_column("tracks", "is_available")
    op.drop_column("tracks", "title")
    op.drop_column("tags", "is_available")
    op.add_column(
        "squads",
        sa.Column(
            "created_at", sa.DATE(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "squads",
        sa.Column(
            "file_url", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "squads",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_column("squads", "is_available")
    op.drop_column("squads", "title")
    op.drop_column("soundkits", "is_available")
    op.drop_column("soundkits", "updated_at")
    op.drop_column("producer_profiles", "is_available")
    op.add_column(
        "playlists",
        sa.Column(
            "created_at", sa.DATE(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "playlists",
        sa.Column(
            "updated_at", sa.DATE(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("playlists", "is_available")
    op.add_column(
        "licenses",
        sa.Column(
            "author_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "licenses_author_id_fkey", "licenses", "users", ["author_id"], ["id"]
    )
    op.drop_column("licenses", "is_available")
    op.drop_column("licenses", "description")
    op.drop_column("licenses", "title")
    op.drop_column("comments", "is_available")
    op.add_column(
        "beats",
        sa.Column(
            "created_at", sa.DATE(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("beats", "is_available")
    op.add_column(
        "beatpacks",
        sa.Column(
            "created_at", sa.DATE(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("beatpacks", "is_available")
    op.alter_column(
        "artist_profiles",
        "picture_url",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "artist_profiles",
        "description",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.drop_column("artist_profiles", "is_available")
    op.alter_column(
        "albums",
        "updated_at",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=False,
    )
    op.drop_column("albums", "is_available")
    op.create_table(
        "beats_to_beatpacks_association_table",
        sa.Column("beat_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "beatpack_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beats.id"],
            name="beats_to_beatpacks_association_table_beat_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["beatpack_id"],
            ["beatpacks.id"],
            name="beats_to_beatpacks_association_table_beatpack_id_fkey",
        ),
    )
    op.create_table(
        "user_to_soundkits_association_table",
        sa.Column(
            "soundkit_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["soundkit_id"],
            ["soundkits.id"],
            name="user_to_soundkits_association_table_soundkit_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_to_soundkits_association_table_user_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "soundkit_id",
            "user_id",
            name="user_to_soundkits_association_table_pkey",
        ),
    )
    op.create_table(
        "user_comments_association",
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "comment_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["comments.id"],
            name="user_comments_association_comment_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_comments_association_user_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "comment_id", name="user_comments_association_pkey"
        ),
    )
    op.create_table(
        "squad_artist_profile_association",
        sa.Column(
            "squad_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "artist_profile_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["artist_profile_id"],
            ["artist_profiles.id"],
            name="squad_artist_profile_association_artist_profile_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
            name="squad_artist_profile_association_squad_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "squad_id",
            "artist_profile_id",
            name="squad_artist_profile_association_pkey",
        ),
    )
    op.create_table(
        "artist_profile_album_association",
        sa.Column(
            "artist_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "album_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
            name="artist_profile_album_association_album_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
            name="artist_profile_album_association_artist_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "artist_id",
            "album_id",
            name="artist_profile_album_association_pkey",
        ),
    )
    op.create_table(
        "album_track_association",
        sa.Column(
            "album_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "track_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
            name="album_track_association_album_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
            name="album_track_association_track_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "album_id", "track_id", name="album_track_association_pkey"
        ),
    )
    op.create_table(
        "artist_profile_tags_association",
        sa.Column(
            "artist_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "tag_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist_profiles.id"],
            name="artist_profile_tags_association_artist_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["tag_name"],
            ["tags.name"],
            name="artist_profile_tags_association_tag_name_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "artist_id",
            "tag_name",
            name="artist_profile_tags_association_pkey",
        ),
    )
    op.create_table(
        "only_telegram_subscribe_month",
        sa.Column(
            "subscribe", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "telegram_account_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["telegram_account_id"],
            ["telegram_accounts.id"],
            name="only_telegram_subscribe_month_telegram_account_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "id", name="only_telegram_subscribe_month_pkey"
        ),
    )
    op.create_table(
        "only_telegram_subscribe_year",
        sa.Column(
            "subscribe", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "telegram_account_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["telegram_account_id"],
            ["telegram_accounts.id"],
            name="only_telegram_subscribe_year_telegram_account_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "id", name="only_telegram_subscribe_year_pkey"
        ),
    )
    op.create_table(
        "telegram_accounts",
        sa.Column(
            "telegram_id", sa.BIGINT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "subscribe", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="telegram_accounts_pkey"),
    )
    op.create_table(
        "producer_profile_tags_association",
        sa.Column(
            "producer_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "tag_names", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["producer_id"],
            ["producer_profiles.id"],
            name="producer_profile_tags_association_producer_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["tag_names"],
            ["tags.name"],
            name="producer_profile_tags_association_tag_names_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "producer_id",
            "tag_names",
            name="producer_profile_tags_association_pkey",
        ),
    )
    op.create_table(
        "squad_producer_profile_association",
        sa.Column(
            "squad_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "producer_profile_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["producer_profile_id"],
            ["producer_profiles.id"],
            name="squad_producer_profile_association_producer_profile_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["squad_id"],
            ["squads.id"],
            name="squad_producer_profile_association_squad_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "squad_id",
            "producer_profile_id",
            name="squad_producer_profile_association_pkey",
        ),
    )
    op.create_table(
        "artist_profile_track_association",
        sa.Column(
            "artist_profile_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "track_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["artist_profile_id"],
            ["artist_profiles.id"],
            name="artist_profile_track_association_artist_profile_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["track_id"],
            ["tracks.id"],
            name="artist_profile_track_association_track_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "artist_profile_id",
            "track_id",
            name="artist_profile_track_association_pkey",
        ),
    )
    op.create_table(
        "user_to_beatpacks_association_table",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "beatpack_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["beatpack_id"],
            ["beatpacks.id"],
            name="user_to_beatpacks_association_table_beatpack_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="user_to_beatpacks_association_table_user_id_fkey",
        ),
    )
    op.drop_table("user_to_producer_association")
    op.drop_table("user_to_message_association")
    op.drop_table("user_to_comments_association")
    op.drop_table("user_to_artist_association")
    op.drop_table("track_to_producer_association")
    op.drop_table("producer_to_tags_association")
    op.drop_table("producer_to_squad_association")
    op.drop_table("producer_to_soundkits_association")
    op.drop_table("producer_to_beatpacks_association")
    op.drop_table("producer_to_beat_association")
    op.drop_table("artist_to_track_association")
    op.drop_table("artist_to_tags_association")
    op.drop_table("album_to_artist_association")
    op.drop_table("admin_producer_to_squad")
    op.drop_table("user_to_tags_association")
    op.drop_table("user_to_chat_association")
    op.drop_table("user_to_albums_association")
    op.drop_table("track_to_tag_association")
    op.drop_table("tag_to_soundkits_association")
    op.drop_table("tag_to_beat_association")
    op.drop_table("playlists_to_track_association")
    op.drop_table("playlists_to_tag_association")
    op.drop_table("playlists_to_beat_association")
    op.drop_table("messages")
    op.drop_table("beatpack_to_tag_association")
    op.drop_table("beatpack_to_beat_association_table")
    op.drop_table("beat_to_soundkits_association")
    op.drop_table("album_to_track_association")
    op.drop_table("album_to_tag_association")
    op.drop_table("notifications")
    op.drop_table("chat")
    # ### end Alembic commands ###
